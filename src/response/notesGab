Configs prises en compte :
{

- Port (pas nécessaire ?)

- server_name : OK

- body_size : OK

- error : OK

- Location {} : OK
      method: OK
      redirect: OK
      root: OK
      directory_listing: OK
      default_file: OK
      cgi: voir que je lui envoie
      upload_file: OK
}

TO DO:

- POST: OK (v1)
- DELETE: OK (v1)
- RETOURS D'ERREUR: commencé
- PAGES D'ERREUR PAR DEFAUT: commencé
- Headers: A faire (Accepted)

CODES POSSIBLES
100:	Continue	Attente de la suite de la requête: "Nécessaire ou pas ?"

200:	OK	Requête traitée avec succès.: Par défaut
201:	Created	Requête traitée avec succès et création d’un document: Pour UPLOAD
204:	No Content	Requête traitée avec succès mais pas d’information à renvoyer: Pour DELETE

301:  Moved Permanently  Document déplacé de façon permanente.: Quand on utilise "redirect" OK

400:  Bad Request  La syntaxe de la requête est erronée: Ok
401:	Unauthorized	Une authentification est nécessaire pour accéder à la ressource: Pas à gérer ?
403:	Forbidden	Le serveur a compris la requête, mais refuse de l'exécuter: Auto index off
404:	Not Found	Ressource non trouvée.: OK
405:	Method Not Allowed	Méthode de requête non autorisée: OK
406:  Not Acceptable     La ressource demandée n'est pas disponible dans un format qui respecterait les en-têtes « Accept » de la requête: Probablement à gérer
410:	Gone	La ressource n'est plus disponible et aucune adresse de redirection n'est pas connue: Quand on a DELETE la ressource

-> Retours d'erreur a verifier
-> Method post que pour les cgi ?
-> Segfault surement dans certain cas '?' '/' ...
-> Default error mal géré = doit modifier la page d'un retour d'erreur précis

100 Continue
The server has received the request headers and the client should proceed to send the request
body (in the case of a request for which a body needs to be sent; for example, a POST request).
Sending a large request body to a server after a request has been rejected for inappropriate headers would be inefficient.
 To have a server check the request's headers, a client must send Expect:
 100-continue as a header in its initial request and receive a 100 Continue status code in response before sending the body.
  If the client receives an error code such as 403 (Forbidden) or 405 (Method Not Allowed)
   then it should not send the request's body.
    The response 417 Expectation Failed indicates that the request should be repeated without the Expect header as
     it indicates that the server does not support expectations (this is the case, for example, of HTTP/1.0 servers).

directory listing devrait pouvoir être on, off ou unset



